# encoding: utf-8
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import PorterStemmer
from nltk.classify import NaiveBayesClassifier
from nltk.corpus import names
#nltk.download('punkt')
#nltk.download('stopwords')

######### FUNCIONES ##############
# Funcion de word_feats
def word_feats(word):
    return {word: True}

#Cargar datasets
def featureSet():

    dataset_computer = ['algorithm',
	'analog',
	'app',
	'application',
	'array',
	'backup',
	'bandwidth',
	'binary',
	'bit',
	'bite',
	'bitmap',
	'blog',
	'blogger',
	'bookmark',
	'boot',
	'broadband',
	'browser',
	'buffer',
	'bug',
	'bus',
	'byte',
	'cache',
	'caps',
	'lock',
	'captcha',
	'cd',
	'cd-rom',
	'client',
	'clip art',
	'clip',
	'board',
	'cloud',
	'computing',
	'command',
	'compile',
	'compress',
	'computer',
	'program',
	'configure',
	'cookie',
	'copy',
	'cpu',
	'cyber',
	'crime',
	'cyberspace',
	'dashboard',
	'data',
	'mining',
	'database',
	'debug',
	'decompress',
	'delete',
	'desktop',
	'development',
	'digital',
	'disk',
	'dns',
	'document',
	'domain',
	'name',
	'dot',
	'atrix',
	'download',
	'drag',
	'dvd',
	'dynamic',
	'email',
	'emoticon',
	'encrypt',
	'encryption',
	'enter',
	'exabyte',
	'faq',
	'file',
	'finder',
	'firewall',
	'firmware',
	'flaming',
	'flash',
	'drive',
	'floppy',
	'disk',
	'flowchart',
	'folder',
	'font',
	'format',
	'frame',
	'freeware',
	'gigabyte',
	'graphics',
	'hack',
	'hacker',
	'hardware',
	'home',
	'page',
	'host',
	'html',
	'hyperlink',
	'hypertext',
	'icon',
	'inbox',
	'integer',
	'interface',
	'internet',
	'ip',
	'address',
	'iteration',
	'java',
	'joystick',
	'junk',
	'mail',
	'kernel',
	'key',
	'keyboard',
	'keyword',
	'laptop',
	'laser',
	'printer',
	'link',
	'linux',
	'log',
	'out',
	'logic',
	'login',
	'lurking',
	'macintosh',
	'macro',
	'main',
	'malware',
	'media',
	'memory',
	'mirror',
	'modem',
	'monitor',
	'motherboard',
	'mouse',
	'multimedia',
	'net',
	'network',
	'node',
	'notebook',
	'offline',
	'online',
	'open',
	'source',
	'system',
	'option',
	'output',
	'page',
	'password',
	'paste',
	'path',
	'phishing',
	'piracy',
	'pirate',
	'platform',
	'plugin',
	'podcast',
	'popup',
	'portal',
	'print',
	'printer',
	'privacy',
	'process',
	'program',
	'programmer',
	'protocol',
	'queue',
	'qwerty',
	'ram',
	'resolution',
	'restore',
	'rom',
	'runtime',
	'save',
	'scan',
	'scanner',
	'screen',
	'screenshot',
	'script',
	'scroll',
	'search',
	'engine',
	'security',
	'server',
	'shareware',
	'shell',
	'shift',
	'key',
	'snapshot',
	'social networking',
	'software',
	'spam',
	'spammer',
	'spreadsheet',
	'spyware',
	'status',
	'bar',
	'storage',
	'surf',
	'syntax',
	'table',
	'tag',
	'teminal',
	'template',
	'terabyte',
	'editor',
	'thread',
	'toolbar',
	'trash',
	'trojan',
	'typeface',
	'undo',
	'unix',
	'upload',
	'url',
	'user',
	'username',
	'utility',
	'version',
	'virtual',
	'virus',
	'web',
	'webmaster',
	'website',
	'widget',
	'wiki',
	'window',
	'windows',
	'wireless',
	'word ',
	'processor',
	'workstation',
	'world',
	'wide',
	'web',
	'worm',
	'www',
	'xml',
	'zip'
	]


    dataset_sports = ['aerobics',
	'archer',
	'archery',
	'arena',
	'arrow',
	'athlete',
	'athletics',
	'axel',
	'badminton',
	'ball',
	'base',
	'baseball',
	'basketball',
	'bat',
	'baton',
	'batter',
	'batting',
	'biathlon',
	'bicycle',
	'bicycling',
	'bike',
	'biking',
	'billiards',
	'bobsleigh',
	'bocce',
	'boomerang',
	'boules',
	'bow',
	'bowler',
	'bowling',
	'boxer',
	'boxing',
	'bunt',
	'canoe',
	'canoeing',
	'catch',
	'catcher',
	'champion',
	'championship',
	'cleats',
	'club',
	'coach',
	'compete',
	'competing',
	'competition',
	'competitor',
	'crew',
	'cricket',
	'croquet',
	'cue',
	'curling',
	'cycle',
	'cycling',
	'cyclist',
	'dart',
	'dartboard',
	'deadlifting',
	'decathlon',
	'defense',
	'diamond',
	'discus',
	'dive',
	'diver',
	'diving',
	'dodgeball',
	'doubleheader',
	'dugout',
	'equestrian',
	'equipment',
	'exercise',
	'fencing',
	'field',
	'hockey',
	'fielder',
	'fielding',
	'figure ',
	'skating',
	'fitness',
	'football',
	'forward',
	'free ',
	'throw',
	'frisbee',
	'game',
	'gear',
	'geocaching',
	'go',
	'goal',
	'goalie',
	'gold ',
	'medal',
	'golf',
	'golfer',
	'golfing',
	'guard',
	'gym',
	'gymnasium',
	'gymnast',
	'gymnastics',
	'halftime',
	'hammer ',
	'throw',
	'handball',
	'hang ',
	'gliding',
	'hardball',
	'helmet',
	'heptathlon',
	'high ',
	'jump',
	'hitter',
	'hockey',
	'hole-in-one',
	'plate',
	'run',
	'team',
	'hoop',
	'horseshoes',
	'huddle',
	'hurdle',
	'hockey',
	'ice ',
	'rink',
	'skates',
	'skating',
	'infield',
	'infielder',
	'inline ',
	'skates',
	'inning',
	'jai-alai',
	'javelin',
	'jog',
	'jogger',
	'judo',
	'jump',
	'rope',
	'jumper',
	'jumping',
	'karate',
	'kayak',
	'kayaker',
	'kayaking',
	'kickball',
	'kite',
	'kneepads',
	'kung ',
	'fu',
	'lacrosse',
	'lawn ',
	'bowling',
	'league',
	'long ',
	'jump',
	'lose',
	'loser',
	'luge',
	'lutz',
	'major ',
	'league',
	'mallet',
	'martial ',
	'arts',
	'mat',
	'medal',
	'minor ',
	'league',
	'mitt',
	'mouthguard',
	'move',
	'movement',
	'mvp',
	'net',
	'no-hitter',
	'nordic ',
	'skiing',
	'offense',
	'ollie',
	'olympics',
	'orienteering',
	'out',
	'outfield',
	'outfielder',
	'paddle',
	'paddleball',
	'paddling',
	'paintball',
	'parasailing',
	'parkour',
	'pentathlon',
	'pickleball',
	'ping pong',
	'pitch',
	'pitcher',
	'play',
	'player',
	'playing',
	'playoffs',
	'pogo ',
	'stick',
	'pole',
	'pole ',
	'vault',
	'polo',
	'pool',
	'puck',
	'quarter',
	'quarterback',
	'quiver',
	'race',
	'racer',
	'racewalking',
	'racing',
	'racket',
	'racquetball',
	'rafting',
	'referee',
	'relay',
	'ride',
	'riding',
	'rink',
	'rock ',
	'climbing',
	'roller ',
	'skates',
	'skating',
	'row',
	'rower',
	'rowing',
	'rugby',
	'run',
	'runner',
	'running',
	'sailing',
	'score',
	'scoreboard',
	'scuba',
	'scull',
	'sculling',
	'shortstop',
	'shot ',
	'put',
	'silver ',
	'medal',
	'skate',
	'skating ',
	'rink',
	'skeleton',
	'ski',
	'skier',
	'skiing',
	'slalom',
	'sled',
	'sledder',
	'sledding',
	'snorkeling',
	'snowboard',
	'snowboarder',
	'snowboarding',
	'snowshoeing',
	'soccer',
	'softball',
	'somersault',
	'speed ',
	'skating',
	'sport',
	'sportsmanship',
	'squash',
	'stadium',
	'stick',
	'strike',
	'stroke',
	'sumo ',
	'wrestling',
	'surfer',
	'surfing',
	'swim',
	'swimmer',
	'swimming',
	'synchronized ',
	'swimming',
	'table tennis',
	'taekwondo',
	'tag',
	'target',
	'team',
	'teammate',
	'tee',
	'telemark ',
	'skiing',
	'tennis',
	'tetherball',
	'throw',
	'throwing',
	'wakeboarding',
	'walk',
	'walker',
	'walking',
	'water ',
	'polo',
	'ski',
	'skier',
	'skiing',
	'weightlifter',
	'weightlifting',
	'weights',
	'wetsuit',
	'wicket',
	'win',
	'windsurfer',
	'windsurfing',
	'winner'

	]


    dataset_science=['astronomy', 'astrophysic', 'satom', 'beaker', 'biochemistry', 'biology', 'botany', 'bunsen', 'burner', 'burette',
	'cellchemical','chemistry', 'climate', 'climatologist', 'control', 'cuvette', 'datadatum',
	'electricity', 'electrochemist', 'element', 'energy', 'entomology', 'evolution', 'experiment',
	'fact','flask','fossil','funnel','genetics','geology','geophysics','glassware','graduated cylinder','gravity',
	'herpetology','hypothesis','ichthyology','immunology','lablaboratory','laws','lepidoptery','magnetism','mass','matter','measure','meteorologist','meteorology','microbiologist','microbiology','microscope','mineral','mineralogy','moleculemotion',
	'observatory','observe','organism','ornithology',
	'paleontology','particle','Petri dishphase','physical science','physicspipette','quantum mechanics',
	'radiologyresearchretort','scale','science','scientist','seismology',
	'telescope','temperature','test tube','theory','thermome','tertissue',
	'variable','virologist','volcanology','volume','volumetric flask',
	'watch glass','weather','weigh','zoology',
	'absorb','accumulator','alternating current','anthracite coal','appliance',
	'battery','biodiesel','biofuel','biomass','bituminous coal','blackout','british thermal unit','btu',
	'capacity','carbon','carbon footprint','carbon tax','charcoal','chemical energy','clean energy','climate change','coal','coke','combustion','conservation','crude oil','current',
	'diesel','direct current','drill','dynamo',
	'efficiency','efficient','electric','electrical','electrical grid','electromagnetic energy','electron','energy','engine','engineer','entropy','environment','ergethanol',
	'flexible',' fuel','flywheelfossil fuelfuelfuel cellfurnace',
	'gasgas-turbine','gasoline','generate','generation','generator','geothermal','global warming','green','green energy','greenhouse effect','greenhouse gas','grid',
	'heatheat exchange','high-voltage','horsepower','human-powered','hybrid','hydrocarbon','hydroelectric','hydrogen','hydrothermal',
	'industry','internal combustion engine','inverter',
	'jet fuel','joule',
	'kelvin scale','kilowatt','kilowatt-hour','kinetic energy',
	'light','liquefied petroleum gas',
	'magnetic energy','megawatt','methanemethanolminingmotor',
	'natural gas','nuclear','nuclear energy','nuclear power','nuclear reactor','nucleus',
	'off-the-grid','oil','oil rig',
	'peak oil','peat','petroleum','photon','photovoltaic','photovoltaic panel','pollution','potential energy','power','power grid','power lines','power plant','power station','power transmission','propane','public utility',
	'radiant','radiate','reactor','reciprocating engine','reflect','renewable','reservoir',
	'shale','solar panel','solar power','static electricity','steamsteam engine','steam turbine','sun','sunlight','sunshine','sustainable',
	'temperature','thermthermal energy','thermodynamics','tidal power','transmission lines','transmit','turbine',
	'utilities','volt',
	'waste','watt','wattage','wave power','windwind farm','wind power','wind turbine','windmill']


    dataset_music = [
    'anison',
    'cantopop',
    'c-pop',
    'enka',
    'hongkongenglishpop',
    'j-pop',
    'kayokyoku',
    'k-pop',
    'mandopop',
    'onkyokei',
    'p-pop',
    'taiwanesepop',
    'v-pop',
    'kawaii-metal',
    'africanblues',
    'bluesrock',
    'bluesshouter',
    'britishblues',
    'canadianblues',
    'chicagoblues',
    'classicfemaleblues',
    'contemporaryrandb',
    'countryblues',
    'deltablues',
    'detroitblues',
    'electricblues',
    'funkblues',
    'gospelblues',
    'hillcountryblues',
    'hokumblues',
    'jumpblues',
    'kansascityblues',
    'louisianablues',
    'memphisblues',
    'piedmontblues',
    'punkblues',
    'rhythmandblues',
    'soulblues',
    'stlouisblues',
    'swampblues',
    'texasblues',
    'westcoastblues',
    'baithakgana',
    'dancehallmusic',
    'bouyon',
    'cadence-lypso',
    'calypso',
    'cha-cha-cha',
    'chutney',
    'chutneysoca',
    'chutneyparang',
    'compas',
    'mambo',
    'mento',
    'merengue',
    'meringue',
    'mozambique',
    'pichakaree',
    'punta',
    'puntarock',
    'rasin',
    'reggae',
    'dub',
    'loversrock',
    'ragga',
    'raggajungle',
    'reggaefusion',
    'reggaeton',
    'rocksteady',
    'rumba',
    'ska',
    'twotone',
    'skapunk',
    'salsa',
    'soncubano',
    'songo',
    'soca',
    'timba',
    'twoubadou',
    'zouk',
    'ambientdub',
    'darkambient',
    'dronemusic',
    'spacemusic',
    'illbient',
    'punk',
    'psybient',
    'isolationism',
    'berlinschool',
    'dubtronica',
    'ethnicelectronica',
    'folktronica',
    'laptronica',
    'livetronic',
    'aggrotech',
    'cybergrind',
    'electro-industrial',
    'darkelectro',
    'electronicbodymusic',
    'futurepop',
    'industrialmetal',
    'industrialrock',
    'japanoise',
    'neuedeutscheharte',
    'powerelectronics',
    'deathindustrial',
    'powernoise',
    'acidbreaks',
    'baltimoreclub',
    'mumblerap',
    'nerdcore',
    'newjackswing',
    'newschoolhiphop',
    'oldschoolhiphop',
    'politicalhiphop',
    'ragga',
    'trap',
    'urbanpasifika',
    'westcoasthiphop',
    'latinpop',
    'latinballad',
    'latinswing',
    'latinrock',
    'latinalternative',
    'tropical',
    'bachata',
    'bolero',
    'criolla',
    'cumbia',
    'rockenespaniol',
    'flamenco',
    'tango',
    'folk',
    'contemporaryrnb',
    'disco',
    'funk',
    'deepfunk',
    'freestylemusic',
    'go-go',
    'hiphopsoul',
    'p-funk',
    'post-disco',
    'boogie',
    'pbrnb',
    'gospelmusic',
    'newjackswing',
    'rhythmandblues',
    'soul',
    'blue-eyedsoul',
    'hiphopsoul',
    'northernsoul',
    'neosoul',
    'southernsoul',
    'alternativerock',
    'grunge',
    'post-grunge',
    'oceangrunge',
    'indierock',
    'dunedinsound',
    'mathrock',
    'post-punkrevival',
    'sadcore',
    'dreampop',
    'shoegaze',
    'slowcore',
    'beatmusic',
    'christianrock',
    'darkcabaret',
    'electronicrock',
    'electronicore',
    'experimentalrock',
    'artrock',
    'industrialrock',
    'post-punk',
    'gothicrock',
    'nowave',
    'noiserock',
    'post-rock',
    'post-metal',
    'folkrock',
    'garagerock',
    'glamrock',
    'hardrock',
    'heavymetal',
    'alternativemetal',
    'funkmetal',
    'numetal',
    'rapmetal',
    'avant-gardemetal',
    'blackmetal',
    'symphonicblackmetal',
    'vikingmetal',
    'nationalsocialistblackmetal',
    'atmosphericblackmetal',
    'melodicblackmetal',
    'ambientblackmetal',
    'depressiveblackmetal',
    'depressivesuicidalblackmetal',
    'warmetal',
    'christianmetal',
    'unblackmetal',
    'deathmetal',
    'deathnroll',
    'melodicdeathmetal',
    'technicaldeathmetal',
    'deathgrind',
    'doommetal',
    'death-doom',
    'dronemetal',
    'folkmetal',
    'celticmetal',
    'medievalmetal',
    'paganmetal',
    'glammetal',
    'gothicmetal',
    'grindcore',
    'industrialmetal',
    'kawaiimetal',
    'latinmetal',
    'metalcore',
    'melodicmetalcore',
    'deathcore',
    'mathcore',
    'metalstep',
    'neoclassicalmetal',
    'neuedeutscheharte',
    'post-metal',
    'powermetal',
    'progressivemetal',
    'djent',
    'sludgemetal',
    'speedmetal',
    'symphonicmetal',
    'thrashmetal',
    'crossoverthrash',
    'groovemetal',
    'jazzrock',
    'newwave',
    'worldfusion',
    'paisleyunderground',
    'desertrock',
    'poprock',
    'softrock',
    'progressiverock',
    'canterburyscene',
    'krautrock',
    'newprog',
    'rockinopposition',
    'spacerock',
    'psychedelicrock',
    'acidrock',
    'freakbeat',
    'neo-psychedelia',
    'ragarock',
    'punkrock',

    ]


    dataset_food =['﻿acorn','squash','alfalfa','sprouts','almond','anchovy','anise','appetite','appetizer','apple','apricot','artichoke','asparagus','aspic','ate','avocado','bacon','bagel','bake','baked','alaska','bamboo','shoots','banana','barbecue','barley','basil','batter','beancurd','beans','beet','beef','bell','pepper','berry','biscuit','bitter','black','beans','black','tea','black','eyed','peas','blackberry',
    'bland','blood','orange','blueberry','boil','bowl','boysenberry','bran',
    'bread',
    'breadfruit','breakfast','briske','broccoli','broil','brown','rice','brownie','brunch','brussels','sprouts','buckwheat','buns','burrito','butter','butter','bean','cake','calorie','candy','candy,apple','cantaloupe','capers','caramel','caramel,apple','carbohydrate','carrot','cashew','cassava','casserole','cater','cauliflower','caviar','cayenne,pepper','celery','cereal','chard','cheddar','cheese','cheesecake','chef','cherry','chew','chick,peas','chicken','chili','chips','chives',
    'chocolate',
    'chopsticks','chow','chutney','cilantro','cinnamon','citron','citrus','clam','cloves','cobbler','coconut','cod','coffee','coleslaw','collard','greens','comestibles','cook','cookbook','cookie','corn','cornflakes','cornmeal','cottage,cheese','crab','crackers','cranberry','cream','cream','cheese','crepe','crisp','crunch','crust','cucumber','cuisine','cupboard','cupcake','curds','currants','curry','custard','daikon','daily','bread','dairy','dandelion','greens','danish','pastry',
    'dates'
    ]


    technology_features = [(word_feats(Technology), 'Technology') for Technology in dataset_computer]
    science_features = [(word_feats(Science), 'Science') for Science in dataset_science]
    sports_features = [(word_feats(Sports), 'Sports') for Sports in dataset_sports]
    music_features = [(word_feats(Music), 'Music') for Music in dataset_music]
    food_features = [(word_feats(Food), 'Food') for Food in dataset_food]

    return technology_features + science_features + sports_features + music_features + food_features

# Funcion para limpiar tuit, regresa un string limpio
def clean_tuit(tuit):
    stop_words = set(stopwords.words('english'))
    word_tokens = word_tokenize(tuit) # creacion de tokens

    #filtered_sentence = [w for w in word_tokens if not w in stop_words]
    filtered_sentence = []

    for w in word_tokens:
        if w not in stop_words:
            filtered_sentence.append(w) # checa que las palabras sean utiles y las separa

    return " ".join(filtered_sentence) #regresas palabras utiles

# Funcion para clasificar tuits
def clasificar_tuits(tuits, tweets):
	predictions = {}
	train_set = featureSet()  # carga los data sets en una variable para ser usado y es donde se entrena
	classifier = NaiveBayesClassifier.train(train_set) # agregar los data sets al algoritmo
    # aqui empieza el clasificador
	for sentence in tuits:
		sentence = sentence.lower() # se pone en minuscula todo
		words = sentence.split(' ') #separa por palabras el tuit
		featureset = {}
		for word in words:
			featureset.update(word_feats(word))  #  ingresas el tweet al clasificador de naive bayes
		prediction = classifier.classify(featureset) # genera a que categoria pertenece
		predictions[sentence] = prediction #salida del sistema para alamacenr el resultado para despues imprimirlo es que categoria

	print("{:<10} {:<15}".format('Categorias','Tuit'))
	pos=0
	for k, v in predictions.items():
		print("{:<10} {:<15}".format(v, tweets[pos]))
		pos+=1
######### TERMINA FUNCIONES ##############


###################### MAIN #######################

tuit_1 = "obama is senate"
tuit_2 = "I like eat pizza, because is great"
tuit_3 = "el fer le gusta escuchar rock y es una band"
tweets=[tuit_1,tuit_2,tuit_3]

tuit_1_limpio = clean_tuit(tuit_1)
tuit_2_limpio = clean_tuit(tuit_2)
tuit_3_limpio = clean_tuit(tuit_3)

tuits = []
tuits.append(tuit_1_limpio)
tuits.append(tuit_2_limpio)
tuits.append(tuit_3_limpio)

clasificar_tuits(tuits, tweets)

###################### TERMINAR MAIN #######################
